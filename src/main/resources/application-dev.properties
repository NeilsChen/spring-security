#端口
server.port=80

#请求路径
#server.servlet.context-path=neils

# restcontroller 返回json中日期格式设置
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.jackson.serialization.write-dates-as-timestamps=false


# 上传头像文件路径
filepath.avatar=D:/uploadFiles/avatar/

# 博客图片文件路径
filepath.blog=D:/uploadFiles/blog/


#下面配置与注解排除druid数据源配置 效果一样  用其中一种
#spring.autoconfigure.exclude=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure


# mybatisplus +druid 多数据库配置
mybatis-plus.mapper-locations=classpath*:com/chen/*/mapping/*.xml
# 监控页面用户密码
spring.datasource.druid.stat-view-servlet.loginUsername=admin
spring.datasource.druid.stat-view-servlet.loginPassword=admin123456
# druid连接池配置
spring.datasource.dynamic.druid.initial-size=5
spring.datasource.dynamic.druid.max-active=20
spring.datasource.dynamic.druid.min-idle=2
# 获取连接超时等待时间
spring.datasource.dynamic.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.dynamic.druid.time-between-eviction-runs-millis=60000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 ,log4j
spring.datasource.dynamic.druid.filters=stat,wall

# 数据库连接配置  主
# 默认数据库 user
spring.datasource.dynamic.primary=user
spring.datasource.dynamic.datasource.user.username=root
spring.datasource.dynamic.datasource.user.password=123456
spring.datasource.dynamic.datasource.user.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.dynamic.datasource.user.url=jdbc:mysql://localhost:3306/neils?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong
spring.datasource.dynamic.datasource.user.druid.initial-size=5
spring.datasource.dynamic.datasource.user.druid.validation-query=select 1 FROM DUAL
#spring.datasource.dynamic.datasource.user.druid.public-key= （非全局参数）设置即表示启用加密,底层会自动帮你配置相关的连接参数和filter。
# 从
spring.datasource.dynamic.datasource.blog.username=root
spring.datasource.dynamic.datasource.blog.password=123456
spring.datasource.dynamic.datasource.blog.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.dynamic.datasource.blog.url=jdbc:mysql://localhost:3306/neils_blog?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Hongkong
spring.datasource.dynamic.datasource.blog.druid.initial-size=5
spring.datasource.dynamic.datasource.blog.druid.validation-query=select 1 FROM DUAL

# redis配置
# Redis数据库索引（默认为0）  
spring.redis.database=0
# Redis服务器地址  
spring.redis.host=47.101.150.1
# Redis服务器连接端口  
spring.redis.port=6379
# Redis服务器连接密码（默认为空）  
spring.redis.password=!QAZ1qaz
# 连接池最大连接数（使用负值表示没有限制）  
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）  
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接  
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接  
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）  
spring.redis.timeout=2000

# redis 存储token有效时间 (秒)
spring.redis.token.expire-time=1800

# 日志

#启用配置文件
#logging.config=classpath:logback.xml

#配置日志，并在springbootadmin中增加logfile选项，实时查看日志
logging.file=neils_security/admin.log
logging.file.max-history=10
#默认10mb
#logging.file.max-size=20MB 
#日志模版  带颜色
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx


